/* Custom styles for React Select dropdowns */
.react-select {
  min-height: 40px;
  font-size: 14px;
}

.react-select__control {
  min-height: 40px !important;
  border-color: hsl(var(--input)) !important;
  border-radius: var(--radius) !important;
  box-shadow: none !important;
  transition: border-color 0.15s ease-in-out;
}

.react-select__control:hover {
  border-color: hsl(var(--ring)) !important;
}

.react-select__control--is-focused {
  border-color: hsl(var(--ring)) !important;
  box-shadow: 0 0 0 2px rgba(var(--ring), 0.1) !important;
}

.react-select__control--menu-is-open {
  border-color: hsl(var(--ring)) !important;
  box-shadow: 0 0 0 2px rgba(var(--ring), 0.1) !important;
}

.react-select.border-red-500 .react-select__control {
  border-color: rgb(239, 68, 68) !important;
}

.react-select__menu {
  border-radius: var(--radius) !important;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
  z-index: 100;
}

.react-select__option {
  padding: 8px 12px !important;
  transition: all 0.2s ease !important;
  cursor: pointer !important;
}

.react-select__option:hover {
  background-color: rgba(var(--primary), 0.1) !important;
  transform: translateX(3px) !important;
  box-shadow: -2px 0 0 0 hsl(var(--primary)) !important;
}

.react-select__option--is-focused {
  background-color: rgba(var(--primary), 0.15) !important;
  transform: translateX(3px) !important;
  box-shadow: -2px 0 0 0 hsl(var(--primary)) !important;
}

.react-select__option--is-selected {
  background-color: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.react-select__placeholder {
  color: #9ca3af !important;
}

.react-select__value-container {
  padding: 2px 8px !important;
}

.react-select__single-value {
  color: hsl(var(--foreground)) !important;
}

.react-select__indicator-separator {
  background-color: hsl(var(--border)) !important;
}

.react-select__indicator {
  color: hsl(var(--muted-foreground)) !important;
}

/* Make all dropdown elements maintain the same height */
.react-select__control,
.react-select__value-container,
.react-select__input-container,
.react-select__placeholder,
.react-select__single-value {
  height: 40px;
  display: flex;
  align-items: center;
}

/* Add a fixed width for consistency across all dropdowns */
.react-select {
  width: 100%;
}

/* Specific styles for jurisdiction dropdowns to appear above instead of below */
#jurisdiction_country-wrapper .react-select__menu,
#jurisdiction_state-wrapper .react-select__menu {
  margin-top: 0 !important;
  margin-bottom: 45px !important;
  bottom: 100% !important;
  top: auto !important;
}

/* Custom styles for PhoneInput */
.phone-input {
  display: flex;
  align-items: center;
  padding: 0.5rem;
  font-size: 14px;
  width: 100%;
}

.PhoneInput {
  display: flex;
  align-items: center;
  width: 100%;
}

.PhoneInputCountry {
  margin-right: 0.5rem;
  display: flex;
  align-items: center;
}

.PhoneInputCountryIcon {
  width: 1.5rem;
  height: 1rem;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
}

.PhoneInputInput {
  flex: 1;
  border: none;
  padding: 0.5rem 0;
  outline: none;
  background: transparent;
  color: hsl(var(--foreground));
  font-size: 14px;
  height: 38px;
}

.PhoneInputCountrySelectArrow {
  margin-left: 0.25rem;
  width: 0.3rem;
  height: 0.3rem;
  border-style: solid;
  border-color: currentColor transparent transparent;
  border-width: 0.3rem 0.3rem 0;
}

/* Match focus style with other inputs */
.PhoneInputInput:focus {
  outline: none;
}

.PhoneInputCountry:focus-within {
  outline: none;
}

/* Dropdown styling */
.PhoneInputCountrySelect {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  border: 0;
  opacity: 0;
  cursor: pointer;
}

/* Phone input dropdown styles - need to use these selectors since they're generated by the library */
.PhoneInputCountrySelect option {
  padding: 8px 12px;
  transition: all 0.2s ease;
  cursor: pointer;
}

.PhoneInputCountrySelect option:hover,
.PhoneInputCountrySelect option:focus {
  background-color: rgba(var(--primary), 0.1);
  transform: translateX(3px);
  box-shadow: -2px 0 0 0 hsl(var(--primary));
}

/* Add hover effect to country selector button */
.PhoneInputCountry:hover {
  background-color: rgba(var(--primary), 0.05);
  border-radius: 4px;
}
